{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/react-to-do-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Task } from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [newTask, setNewTask] = useState(); // const [todoList, setTodoList] = useState([]);\n\n  const [todoList, setTodoList] = useState(() => {\n    const saved = localStorage.getItem('key1');\n    const savedvalues = JSON.parse(saved);\n    return savedvalues;\n  });\n\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem(\"key1\", JSON.stringify(todoList));\n  }, [todoList]);\n  useEffect(() => {\n    const mydata = window.localStorage.getItem('key1');\n    if (mydata) setTodoList(JSON.parse(mydata));\n  }, []); // since we can't add the data in array or list in react using normal list or array methods\n  // we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\n\n  const addTask = () => {\n    // triple dots in react mean include everything that is present in in the list and add to the newTask.\n    const newTodoList = [...todoList, newTask];\n    setTodoList(newTodoList);\n    const task = {\n      id: todoList.length == 0 ? 1 : todoList[todoList.length - 1].id + 1,\n      taskName: newTask,\n      completed: false\n    };\n    setTodoList([...todoList, task]); // we can use the above code block as well this is simpler and shorter way to achive the task that is\n    // to add exiting list task with a newt task\n  }; // const completeTask = (id) => {\n  //   setTodoList(\n  //     todoList.map((task)=>{\n  //       if(task.id === id){\n  //         return{...task,completed:true};\n  //       } \n  //       else{\n  //         return task;\n  //       }\n  //     })\n  //   )\n  //   }\n\n\n  const completeTask = id => {\n    setTodoList(todoList.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          completed: true\n        };\n      } else {\n        return task;\n      }\n    }));\n  };\n\n  const deleteTask = id => {\n    // const newTodoList = todoList.filter((task)=> task!== taskName); \n    // const newTodoList = todoList.filter((task) =>{\n    //   if (task === taskName){\n    //     return false;}\n    //   else{\n    //     return true;}\n    // })\n    // setTodoList(newTodoList);\n    setTodoList(todoList.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: todoList && todoList.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          taskName: task.taskName,\n          id: task.id,\n          completed: task.completed,\n          deleteTask: deleteTask,\n          completeTask: completeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 56\n        }, this); // return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YGt9hTlE3GAShyaQ1UgSRpWpbFw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","App","newTask","setNewTask","todoList","setTodoList","saved","localStorage","getItem","savedvalues","JSON","parse","handleChange","event","target","value","window","setItem","stringify","mydata","addTask","newTodoList","task","id","length","taskName","completed","completeTask","map","deleteTask","filter"],"sources":["/Users/musubimanagement/Desktop/react-to-do-main/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect} from \"react\";\nimport {Task} from \"./Task\"\n\nfunction App() {\n\n  const [newTask, setNewTask] = useState();\n  // const [todoList, setTodoList] = useState([]);\n\n  const [todoList, setTodoList] = useState(()=>{\n    const saved=localStorage.getItem('key1')\n    const savedvalues=JSON.parse(saved)\n    return savedvalues\n  });\n\n\n\n\n\n  const handleChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n\n  useEffect(()=>{\n     \n    window.localStorage.setItem(\"key1\",JSON.stringify(todoList))},\n    [todoList]);\n\n    useEffect(()=>{\n      const mydata = window.localStorage.getItem('key1');\n      if (mydata)\n      setTodoList(JSON.parse(mydata))}\n    ,[]);\n\n  // since we can't add the data in array or list in react using normal list or array methods\n  // we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\n  const addTask = () => {\n    // triple dots in react mean include everything that is present in in the list and add to the newTask.\n    const newTodoList = [...todoList, newTask];\n    setTodoList(newTodoList);\n\n    const task={\n      id: todoList.length == 0 ? 1 :   todoList[todoList.length-1].id+1,\n      taskName: newTask,\n      completed: false,\n    };\n\n\n    setTodoList([...todoList,task]);\n    // we can use the above code block as well this is simpler and shorter way to achive the task that is\n    // to add exiting list task with a newt task\n  };\n\n  // const completeTask = (id) => {\n  //   setTodoList(\n  //     todoList.map((task)=>{\n  //       if(task.id === id){\n  //         return{...task,completed:true};\n  //       } \n  //       else{\n  //         return task;\n  //       }\n  //     })\n  //   )\n  //   }\n  const completeTask = (id) => {\n    setTodoList(\n      todoList.map((task) => {\n        if (task.id === id) {\n          return { ...task, completed: true };\n        } else {\n          return task;\n        }\n      })\n    );\n  };\n\n\n\n  const deleteTask=(id)=>{\n    // const newTodoList = todoList.filter((task)=> task!== taskName); \n\n    // const newTodoList = todoList.filter((task) =>{\n    //   if (task === taskName){\n    //     return false;}\n    //   else{\n    //     return true;}\n      // })\n\n      // setTodoList(newTodoList);\n      setTodoList(todoList.filter((task)=> task.id !== id));\n    \n\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"addTask\">\n        <input onChange={handleChange} /> <button onClick={(addTask)}>Add Task </button>\n        {/* in react when we use a function on click that uses some parameters we have to put it like ()=>funciton, so it call a function that does a certain task. */}\n      </div>\n      <div className=\"list\">\n        {todoList && todoList.map((task) => { return ( <Task \n          taskName={task.taskName} \n          id={task.id} \n          completed={task.completed}\n          deleteTask={deleteTask} \n          completeTask={completeTask} />)\n          // return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n          \n         \n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}